cloudiness = mean(df$cloudiness)
)
r.squaredGLMM(m1.2)
# effect plots
nd1.2 <- expand.grid(day=factor(c("Monday"), levels=c("Monday", "Sunday")),
loc=c("AL", "HW"),
pressure=seq(min(df$pressure), max(df$pressure), length.out=100)) %>%
mutate(
cloudiness = mean(df$cloudiness),
wind = mean(df$wind),
temp = mean(df$temp),
var = "Air pressure (hPa)",
x = pressure
) %>%
rbind(expand.grid(day=factor(c("Monday"), levels=c("Monday", "Sunday")),
loc=c("AL", "HW"),
temp=seq(min(df$temp), max(df$temp), length.out=100)) %>%
mutate(
cloudiness = mean(df$cloudiness),
wind = mean(df$wind),
pressure = mean(df$pressure),
var = "Temperature (°C)",
x = temp)) %>%
rbind(expand.grid(day=factor(c("Monday"), levels=c("Monday", "Sunday")),
loc=c("AL", "HW"),
cloudiness=seq(min(df$cloudiness), max(df$cloudiness), length.out=100)) %>%
mutate(
temp = mean(df$temp),
wind = mean(df$wind),
pressure = mean(df$pressure),
var = "Cloudiness",
x = cloudiness)) %>%
rbind(expand.grid(day=factor(c("Monday"), levels=c("Monday", "Sunday")),
loc=c("AL", "HW"),
wind=seq(min(df$wind), max(df$wind), length.out=100)) %>%
mutate(
temp = mean(df$temp),
cloudiness = mean(df$cloudiness),
pressure = mean(df$pressure),
var = "Wind speed (m/s)",
x = wind))
bm1.2 <- bootMer(m1.2,
function(m){predict(m, newdata = nd1.2, re.form = NA)},
nsim = 500,
.progress = "txt")
nd1.2 <- nd1.2 %>%
mutate(
y = bm1.2$t0,
lwr = apply(bm1.2$t, 2, quantile, 0.025),
upr = apply(bm1.2$t, 2, quantile, 0.975),
loc = factor(loc, levels = c("AL", "HW"), labels = c("Agricultural landscape", "Highway"))
)
ggplot(nd1.2, aes(x=x, y=y)) +
geom_line(aes(color=loc)) +
geom_ribbon(aes(ymin=lwr, ymax=upr, fill=loc), alpha=.3) +
scale_color_manual(values = c("chartreuse4", "coral4")) +
scale_fill_manual(values = c("chartreuse4", "coral4")) +
facet_wrap(~var, scales = "free_x") +
labs(x="", y="Syllabus length (sec)", color="", fill="") +
theme_bw() +
theme(legend.position = "top")
ggsave("effects_m1.2.png", dpi=300, height = 14, width = 18, units = "cm")
nd1.2.2 <- expand.grid(day=factor(c("Monday", "Sunday"), levels=c("Sunday", "Monday")),
loc=c("AL", "HW")) %>%
mutate(
cloudiness = mean(df$cloudiness),
wind = mean(df$wind),
temp = mean(df$temp),
pressure = mean(df$pressure)
)
bm1.2.2 <- bootMer(m1.2,
function(m){predict(m, newdata = nd1.2.2, re.form = NA)},
nsim = 500,
.progress = "txt")
nd1.2.2 <- nd1.2.2 %>%
mutate(
y = bm1.2.2$t0,
lwr = apply(bm1.2.2$t, 2, quantile, 0.025),
upr = apply(bm1.2.2$t, 2, quantile, 0.975),
loc = factor(loc, levels = c("AL", "HW"), labels = c("Agricultural landscape", "Highway"))
)
ggplot(nd1.2.2, aes(x=day, y=y, color=loc)) +
geom_point(position = position_dodge(width = .2)) +
geom_errorbar(aes(ymin=lwr, ymax=upr, fill=loc), position = position_dodge(), width = .2) +
scale_color_manual(values = c("chartreuse4", "coral4")) +
scale_fill_manual(values = c("chartreuse4", "coral4")) +
labs(x="", y="Syllabus length (sec)", color="", fill="") +
theme_bw() +
theme(legend.position = "top")
ggsave("effects_m1.2_day.png", dpi=300, height = 10, width = 10, units = "cm")
# model selection
m1.3 <- lmer(syll_sum ~ day*loc*(temp+wind+pressure+cloudiness)+(1|code), data=df)
Anova(m1.3) # removing three-fold interactions
m1.3 <- update(m1.3, ~.-day:loc:temp-day:loc:wind-day:loc:pressure-day:loc:cloudiness)
Anova(m1.3) # removing interactions with day
m1.3 <- lmer(syll_sum ~ day+loc*(temp+wind+pressure+cloudiness)+(1|code), data=df)
Anova(m1.3) # removing loc:wind and loc:cloudiness
m1.3 <- lmer(syll_sum ~ day+loc*(pressure+temp)+wind+cloudiness+(1|code), data=df)
Anova(m1.3) # removing cloudiness
m1.3 <- lmer(syll_sum ~ day+loc*(pressure+temp)+wind+(1|code), data=df)
Anova(m1.3) # final model
# model diagnostics and output
plot(m1.3)
qqmath(m1.3)
(s1.3 <- summary(m1.3))
# effect plots
nd1.3 <- expand.grid(day=factor(c("Monday"), levels=c("Monday", "Sunday")),
loc=c("AL", "HW"),
pressure=seq(min(df$pressure), max(df$pressure), length.out=100)) %>%
mutate(
cloudiness = mean(df$cloudiness),
wind = mean(df$wind),
temp = mean(df$temp)
)
bm1.3 <- bootMer(m1.3,
function(m){predict(m, newdata = nd1.3, re.form = NA)},
nsim = 500,
.progress = "txt")
nd1.3 <- nd1.3 %>%
mutate(
y = bm1.3$t0,
lwr = apply(bm1.3$t, 2, quantile, 0.025),
upr = apply(bm1.3$t, 2, quantile, 0.975),
wind = factor(wind, levels=c(0,5,10), labels = paste("Wind speed:",c(0,5,10),"m/s")),
loc = factor(loc, levels = c("AL", "HW"), labels = c("Agricultural landscape", "Highway"))
)
ggplot(nd1.3, aes(x=pressure, y=y)) +
geom_line(aes(color=loc)) +
geom_ribbon(aes(ymin=lwr, ymax=upr, fill=loc), alpha=.3) +
scale_color_manual(values = c("chartreuse4", "coral4")) +
scale_fill_manual(values = c("chartreuse4", "coral4")) +
labs(x="Air pressure (hPa)", y="Number of syllables", color="", fill="") +
theme_bw() +
theme(legend.position = "top")
ggsave("effects_m1.3.png", dpi=300, height = 10, width = 12, units = "cm")
# model selection
m1.4 <- lmer(singing_sunrise ~ day*loc*(temp+wind+pressure+cloudiness)+(1|code), data=df)
Anova(m1.4) # removing three-fold interactions
m1.4 <- update(m1.4, ~.-day:loc:temp-day:loc:wind-day:loc:pressure-day:loc:cloudiness)
Anova(m1.4) # removing day:temp
m1.4 <- update(m1.4, ~.-day:temp)
Anova(m1.4) # removing loc:wind
m1.4 <- update(m1.4, ~.-loc:wind)
Anova(m1.4) # removing loc:cloudiness
m1.4 <- update(m1.4, ~.-loc:cloudiness)
Anova(m1.4) # final model
# model diagnostics and output
plot(m1.4)
qqmath(m1.4)
(s1.4 <- summary(m1.4))
r.squaredGLMM(m1.4)
# effect plots
nd1.4 <- expand.grid(loc=c("AL", "HW"),
day=c("Sunday", "Monday"),
pressure=seq(min(df$pressure), max(df$pressure), length.out=100)) %>%
mutate(wind = mean(df$wind),
cloudiness = mean(df$cloudiness),
temp = mean(df$temp),
x = pressure,
variable = "Air pressure") %>%
rbind(expand.grid(loc=c("AL", "HW"),
day=c("Sunday", "Monday"),
temp=seq(min(df$temp), max(df$temp), length.out=100)) %>%
mutate(wind = mean(df$wind),
cloudiness = mean(df$cloudiness),
pressure = mean(df$pressure),
x = temp,
variable = "Temperature")) %>%
rbind(expand.grid(loc=c("AL", "HW"),
day=c("Sunday", "Monday"),
cloudiness=seq(min(df$cloudiness), max(df$cloudiness), length.out=100)) %>%
mutate(  wind = mean(df$wind),
pressure = mean(df$pressure),
temp = mean(df$temp),
x = cloudiness,
variable = "Cloudiness")) %>%
rbind(expand.grid(loc=c("AL", "HW"),
day=c("Sunday", "Monday"),
wind=seq(min(df$wind), max(df$wind), length.out=100)) %>%
mutate(pressure = mean(df$pressure),
temp = mean(df$temp),
cloudiness = mean(df$cloudiness),
x = wind,
variable = "Wind speed"))
bm1.4 <- bootMer(m1.4,
function(m){predict(m, newdata = nd1.4, re.form = NA)},
nsim = 500,
.progress = "txt")
nd1.4 <- nd1.4 %>%
mutate(
y = bm1.4$t0,
lwr = apply(bm1.4$t, 2, quantile, 0.025),
upr = apply(bm1.4$t, 2, quantile, 0.975),
loc = factor(loc, levels = c("AL", "HW"), labels = c("Agricultural landscape", "Highway"))
)
ggplot(nd1.4, aes(x=x, y=y)) +
geom_line(aes(color=loc)) +
geom_ribbon(aes(ymin=lwr, ymax=upr, fill=loc), alpha=.3) +
scale_color_manual(values = c("chartreuse4", "coral4")) +
scale_fill_manual(values = c("chartreuse4", "coral4")) +
facet_grid(day~variable, scales = "free_x") +
labs(y = "Onset of singing (mins rel. to sunrise)",
x = "hPa | intensity | °C | m/s",
color="", fill="") +
theme_bw() +
theme(legend.position = "top")
ggsave("effects_m1.4.png", dpi=300, height = 16, width = 18, units = "cm")
# multicollinearity check
lmer(length_sum~day+dist_road_resc+temp+wind+humidity+pressure+cloudiness+(1|code),
data=df[df$loc=="AL",]) %>%
vif # humidity will be removed
lmer(length_sum~day+dist_road_resc+temp+wind+pressure+cloudiness+(1|code),
data=df[df$loc=="AL",]) %>%
vif # fine
# model selection
m2.1 <- lmer(length_sum~day*(dist_road_resc+temp+wind+pressure+cloudiness)+(1|code),
data=df[df$loc=="AL",])
Anova(m2) # removing interactions
m2.1 <- lmer(length_sum~day+dist_road_resc+temp+wind+pressure+cloudiness+(1|code),
data=df[df$loc=="AL",])
Anova(m2.1) # removing temp, day, and cloudiness
m2.1 <- lmer(length_sum~dist_road_resc+wind+pressure+(1|code),
data=df[df$loc=="AL",])
# model selection
m2.1 <- lmer(length_sum~day*(dist_road_resc+temp+wind+pressure+cloudiness)+(1|code),
data=df[df$loc=="AL",])
Anova(m2.1) # removing interactions
m2.1 <- lmer(length_sum~day+dist_road_resc+temp+wind+pressure+cloudiness+(1|code),
data=df[df$loc=="AL",])
Anova(m2.1) # removing temp, day, and cloudiness
m2.1 <- lmer(length_sum~dist_road_resc+wind+pressure+(1|code),
data=df[df$loc=="AL",])
Anova(m2.1) # final model
# model diagnostics and output
plot(m2.1)
qqmath(m2.1)
(s2.1 <- summary(m2.1))
r.squaredGLMM(m2.1)
# effect plots
nd2.1.1 <- data.frame(dist_road_resc = seq(min(df$dist_road_resc), max(df$dist_road_resc), l=100),
wind = mean(df$wind),
pressure = mean(df$pressure))
bm2.1.1 <- bootMer(m2.1, function(m){predict(m, newdata = nd2.1.1, re.form = NA)}, nsim = 500, .progress = "txt")
nd2.1.1 <- nd2.1.1 %>%
mutate(y = bm2.1.1$t0,
lwr = apply(bm2.1.1$t, 2, quantile, 0.025),
upr = apply(bm2.1.1$t, 2, quantile, 0.975),
dist_road = dist_road_resc*sd(df$distance_road) + mean(df$distance_road))
(p2.1.1 <- ggplot(nd2.1.1, aes(x=dist_road, y=y)) +
geom_line(color="chartreuse4") +
geom_ribbon(aes(ymin=lwr, ymax=upr), alpha=.3, fill="chartreuse4") +
labs(x="Distance to nearest road (m)", y="Song duration (sec)") +
theme_bw())
# model selection
m2.3 <- lmer(syll_sum~day*(dist_road_resc+temp+wind+pressure+cloudiness)+(1|code),
data=df[df$loc=="AL",])
Anova(m2.3) # removing interactions
m2.3 <- lmer(syll_sum~day+dist_road_resc+temp+wind+pressure+cloudiness+(1|code),
data=df[df$loc=="AL",])
Anova(m2.3) # removing temp, day, and cloudiness
m2.3 <- lmer(syll_sum~dist_road_resc+wind+pressure+(1|code),
data=df[df$loc=="AL",])
Anova(m2.3) # final model
# model diagnostics and output
plot(m2.3)
qqmath(m2.3)
(s2.3 <- summary(m2.3))
r.squaredGLMM(m2.3)
# effect plots
nd2.3.1 <- data.frame(dist_road_resc = seq(min(df$dist_road_resc), max(df$dist_road_resc), l=100),
wind = mean(df$wind),
pressure = mean(df$pressure))
bm2.3.1 <- bootMer(m2.3, function(m){predict(m, newdata = nd2.3.1, re.form = NA)}, nsim = 500, .progress = "txt")
nd2.3.1 <- nd2.3.1 %>%
mutate(y = bm2.3.1$t0,
lwr = apply(bm2.3.1$t, 2, quantile, 0.025),
upr = apply(bm2.3.1$t, 2, quantile, 0.975),
dist_road = dist_road_resc*sd(df$distance_road) + mean(df$distance_road))
p2.3.1 <- ggplot(nd2.3.1, aes(x=dist_road, y=y)) +
geom_line(color="chartreuse4") +
geom_ribbon(aes(ymin=lwr, ymax=upr), alpha=.3, fill="chartreuse4") +
labs(x="Distance to nearest road (m)", y="Number of syllables") +
theme_bw()
(p2.3.1 <- ggplot(nd2.3.1, aes(x=dist_road, y=y)) +
geom_line(color="chartreuse4") +
geom_ribbon(aes(ymin=lwr, ymax=upr), alpha=.3, fill="chartreuse4") +
labs(x="Distance to nearest road (m)", y="Number of syllables") +
theme_bw())
library(cowplot)
plot_grid(p2.1.1 + labs(),
p2.3.1 + labs(),
ncol = 2)
ggsave("effects_m2.1_m2.3_dist.png", dpi=300, height = 10, width = 18, units = "cm")
# multicollinearity check
lmer(length_sum ~ vehicle+RPDI2sc+temp+wind+humidity+pressure+cloudiness+(1|code),
data=df.dopr) %>%
vif # humidity will be removed
# multicollinearity check
lmer(length_sum ~ vehicle+RPDI2sc+temp+wind+humidity+pressure+cloudiness+(1|code),
data=df[df$loc=="HW"]) %>%
vif # humidity will be removed
# multicollinearity check
lmer(length_sum ~ vehicle+RPDI2sc+temp+wind+humidity+pressure+cloudiness+(1|code),
data=df[df$loc=="HW",]) %>%
vif # humidity will be removed
lmer(length_sum ~ vehicle+RPDI2sc+temp+wind+pressure+cloudiness+(1|code),
data=df[df$loc=="HW",]) %>%
vif # fine
# model selection
m3.1 <- lmer(length_sum ~ vehicle+RPDI2sc+temp+wind+pressure+cloudiness+(1|code),
data=df[df$loc=="HW",])
Anova(m3.1) # removing pressure
m3.1 <- lmer(length_sum ~ vehicle+RPDI2sc+temp+wind+cloudiness+(1|code),
data=df[df$loc=="HW",])
Anova(m3.1) # removing vehicle
m3.1 <- lmer(length_sum ~ RPDI2sc+temp+wind+cloudiness+(1|code),
data=df[df$loc=="HW",])
Anova(m3.1) # removing cloudiness
m3.1 <- lmer(length_sum ~ RPDI2sc+temp+wind+(1|code), data=data=df[df$loc=="HW",])
Anova(m3.1) # final model
m3.1 <- lmer(length_sum ~ RPDI2sc+temp+wind+(1|code), data=df[df$loc=="HW",])
Anova(m3.1) # final model
# model diagnostics and output
plot(m3.1)
qqmath(m3.1)
(s3.1 <- summary(m3.1))
r.squaredGLMM(m3.1)
# model selection
m3.2 <- lmer(length_mean ~ vehicle+RPDI2sc+temp+wind+pressure+cloudiness+(1|code),
data=df[df$loc=="HW",])
Anova(m3.2) # removing RPDI
m3.2 <- lmer(length_mean ~ vehicle+temp+wind+pressure+cloudiness+(1|code),
data=df[df$loc=="HW",])
Anova(m3.2) # final model
# model diagnostics and output
plot(m3.2)
qqmath(m3.2)
(s3.2 <- summary(m3.2))
r.squaredGLMM(m3.2)
# model selection
m3.3 <- lmer(syll_sum ~ vehicle+RPDI2sc+temp+wind+pressure+cloudiness+(1|code),
data=df[df$loc=="HW",])
Anova(m3.3) # removing pressure
m3.3 <- lmer(syll_sum ~ vehicle+RPDI2sc+temp+wind+cloudiness+(1|code),
data=df[df$loc=="HW",])
Anova(m3.3) # removing vehicle
m3.3 <- lmer(syll_sum ~ RPDI2sc+temp+wind+cloudiness+(1|code), data=df[df$loc=="HW",])
Anova(m3.3) # removing cloudiness
m3.3 <- lmer(syll_sum ~ RPDI2sc+temp+wind+(1|code), data=df[df$loc=="HW",])
Anova(m3.3) # removing wind
m3.3 <- lmer(syll_sum ~ RPDI2sc+temp+(1|code), data=df[df$loc=="HW",])
Anova(m3.3) # final model
# model diagnostics and output
plot(m3.3)
qqmath(m3.3)
(s1.3 <- summary(m3.3))
r.squaredGLMM(m3.3)
# model selection
m3.4 <- lmer(singing_sunrise ~ vehicle+RPDI2sc+temp+wind+pressure+cloudiness+(1|code),
data=df[df$loc=="HW",])
Anova(m3.4) # removing temp
m3.4 <- lmer(singing_sunrise ~ vehicle+RPDI2sc+pressure+wind+cloudiness+(1|code),
data=df[df$loc=="HW",])
Anova(m3.4) # removing RPDI
m3.4 <- lmer(singing_sunrise ~ vehicle+pressure+wind+cloudiness+(1|code),
data=df[df$loc=="HW",])
Anova(m3.4) # final model
# model diagnostics and output
plot(m3.4)
qqmath(m3.4)
(s1.4 <- summary(m3.4))
r.squaredGLMM(m3.4)
# Effect plots --------------------------------------------------------------------------------
nd3.1 <- data.frame(RPDI2sc = seq(min(df.dopr$RPDI2sc), max(df.dopr$RPDI2sc), l=100),
temp=mean(df$temp),
wind=mean(df$wind))
# Effect plots --------------------------------------------------------------------------------
nd3.1 <- data.frame(RPDI2sc = seq(min(df[df$loc=="HW",]$RPDI2sc), max(df[df$loc=="HW",]$RPDI2sc), l=100),
temp=mean(df$temp),
wind=mean(df$wind))
bm3.1 <- bootMer(m3.1, function(m){predict(m, newdata = nd3.1, re.form = NA)}, nsim = 500, .progress = "txt")
nd3.1 <- nd3.1 %>%
mutate(y = bm3.1$t0,
lwr = apply(bm3.1$t, 2, quantile, 0.025),
upr = apply(bm3.1$t, 2, quantile, 0.975))
nd3.2 <- data.frame(vehicle = seq(min(df[df$loc=="HW",]$vehicle), max(df[df$loc=="HW",]$vehicle), l=100),
temp=mean(df$temp),
wind=mean(df$wind),
pressure=mean(df$pressure),
cloudiness=mean(df$cloudiness))
bm3.2 <- bootMer(m3.2, function(m){predict(m, newdata = nd3.2, re.form = NA)}, nsim = 500, .progress = "txt")
nd3.2 <- nd3.2 %>%
mutate(y = bm3.2$t0,
lwr = apply(bm3.2$t, 2, quantile, 0.025),
upr = apply(bm3.2$t, 2, quantile, 0.975))
nd3.3 <- data.frame(RPDI2sc = seq(min(df[df$loc=="HW",]$RPDI2sc), max(df[df$loc=="HW",]$RPDI2sc), l=100),
temp=mean(df$temp))
bm3.3 <- bootMer(m3.3, function(m){predict(m, newdata = nd3.3, re.form = NA)}, nsim = 500, .progress = "txt")
nd3.3 <- nd3.3 %>%
mutate(y = bm3.3$t0,
lwr = apply(bm3.3$t, 2, quantile, 0.025),
upr = apply(bm3.3$t, 2, quantile, 0.975))
nd3.4 <- data.frame(vehicle = seq(min(df[df$loc=="HW",]$vehicle), max(df[df$loc=="HW",]$vehicle), l=100),
pressure=mean(df$pressure),
wind=mean(df$wind),
cloudiness=mean(df$cloudiness))
bm3.4 <- bootMer(m3.4, function(m){predict(m, newdata = nd3.4, re.form = NA)}, nsim = 500, .progress = "txt")
nd3.4 <- nd3.4 %>%
mutate(y = bm3.4$t0,
lwr = apply(bm3.4$t, 2, quantile, 0.025),
upr = apply(bm3.4$t, 2, quantile, 0.975))
plot_grid(ggplot(nd3.1, aes(x=RPDI2sc*sd(df[df$loc=="HW",]$RPDI2)+mean(df[df$loc=="HW",]$RPDI2), y=y)) +
geom_line(color="coral4") +
geom_ribbon(aes(ymin=lwr, ymax=upr), alpha=.3, fill="coral4") +
labs(x="", y="Song duration (sec)") +
theme_bw(),
ggplot(nd3.2, aes(x=vehicle, y=y)) +
geom_line(color="coral4") +
geom_ribbon(aes(ymin=lwr, ymax=upr), alpha=.3, fill="coral4") +
labs(x="", y="Syllabus length (sec)") +
theme_bw(),
ggplot(nd3.3, aes(x=RPDI2sc*sd(df[df$loc=="HW",]$RPDI2)+mean(df[df$loc=="HW",]$RPDI2), y=y)) +
geom_line(color="coral4") +
geom_ribbon(aes(ymin=lwr, ymax=upr), alpha=.3, fill="coral4") +
labs(x="Long-term traffic intensity (cars/day)", y="Number of syllables") +
theme_bw(),
ggplot(nd3.4, aes(x=vehicle, y=y)) +
geom_line(color="coral4") +
geom_ribbon(aes(ymin=lwr, ymax=upr), alpha=.3, fill="coral4") +
labs(x="Instant traffic intensity (cars/hour)", y="Onset of singing (mins rel. to sunrise)") +
theme_bw(),
ncol = 2)
ggsave("effects_m3.x.png", dpi=300, height = 16, width = 18, units = "cm")
save(m1.1, m1.2, m1.3, m1.4, filename = "models_m.1.x.RData")
save(m1.1, m1.2, m1.3, m1.4, file = "models_m.1.x.RData")
save(m2.1, m2.2, m2.3, m2.4, file = "models_m.2.x.RData")
# model selection
m2.2 <- lmer(length_mean~day*(dist_road_resc+temp+wind+pressure+cloudiness)+(1|code),
data=df[df$loc=="AL",])
Anova(m2.2) # removing interactions
m2.2 <- lmer(length_mean~day+dist_road_resc+temp+wind+pressure+cloudiness+(1|code),
data=df[df$loc=="AL",])
Anova(m2.2) # final model (not significant)
# model selection
m2.4 <- lmer(singing_sunrise~day*(dist_road_resc+temp+wind+pressure+cloudiness)+(1|code),
data=df[df$loc=="AL",])
Anova(m2.4) # removing insignificant interactions
m2.4 <- update(m2.4, ~.-day:dist_road_resc-day:temp)
Anova(m2.4) # final model (not significant)
save(m2.1, m2.2, m2.3, m2.4, file = "models_m.2.x.RData")
save(m3.1, m3.2, m3.3, m3.4, file = "models_m.3.x.RData")
load("models_m.1.x.RData")
load("models_m.2.x.RData")
load("models_m.3.x.RData")
# anova tables -----------------------------------------------------------------------------------------------------------------------
list(m1.1,m1.2,m1.3,m1.4) %>%
lapply(Anova) %>%
lapply(round, 4) %>%
lapply(rownames_to_column) %>%
lapply(as.data.frame) %>%
reduce(full_join, by="rowname") %>%
write.table("anova.tables.1.csv", row.names = F, sep=",")
list(m2.1,m2.2,m2.3,m2.4) %>%
lapply(Anova) %>%
lapply(round, 4) %>%
lapply(rownames_to_column) %>%
lapply(as.data.frame) %>%
reduce(full_join, by="rowname") %>%
write.table("anova.tables.2.csv", row.names = F, sep=",")
list(m3.1,m3.2,m3.3,m3.4) %>%
lapply(Anova) %>%
lapply(round, 4) %>%
lapply(rownames_to_column) %>%
lapply(as.data.frame) %>%
reduce(full_join, by="rowname") %>%
write.table("anova.tables.3.csv", row.names = F, sep=",")
list(m3.1,m3.2,m3.3,m3.4) %>% lapply(r.squaredGLMM)
# table of coefficients --------------------------------------------------------------------------------------------------------------
list(m1.1,m1.2,m1.3,m1.4) %>%
lapply(summary) %>%
lapply(coef) %>%
lapply(function(d) round(d, 3)) %>%
lapply(as.data.frame) %>%
lapply(rownames_to_column) %>%
reduce(full_join, by="rowname") %>%
write.table("coef.tab.1.csv", row.names = F, sep = ",")
list(m2.1,m2.2,m2.3,m2.4) %>%
lapply(summary) %>%
lapply(coef) %>%
lapply(function(d) round(d, 3)) %>%
lapply(as.data.frame) %>%
lapply(rownames_to_column) %>%
reduce(full_join, by="rowname") %>%
write.table("coef.tab.2.csv", row.names = F, sep = ",")
list(m3.1,m3.2,m3.3,m3.4) %>%
lapply(summary) %>%
lapply(coef) %>%
lapply(function(d) round(d, 3)) %>%
lapply(as.data.frame) %>%
lapply(rownames_to_column) %>%
reduce(full_join, by="rowname") %>%
write.table("coef.tab.3.csv", row.names = F, sep = ",")
# specific values of total chorus length
expand.grid(day=factor(c("Monday"), levels=c("Monday", "Sunday")),
loc=c("AL", "HW"),
pressure=c(1005, 1010, 1015, 1020),
wind = c(0,5,10)) %>%
mutate(
cloudiness = mean(df$cloudiness)
) %>%
mutate(y = predict(m1.1, newdata=., re.form=NA)) %>%
View
