loc = factor(loc, levels = c("AL", "HW"), labels = c("Agricultural landscape", "Highway"))
)
ggplot(nd1.2, aes(x=temp, y=y)) +
geom_line(aes(color=loc)) +
geom_ribbon(aes(ymin=lwr, ymax=upr, fill=loc), alpha=.3) +
scale_color_manual(values = c("chartreuse4", "coral4")) +
scale_fill_manual(values = c("chartreuse4", "coral4")) +
labs(x="Temperature (°C)", y="Strophe length (s)", color="", fill="") +
theme_bw() +
theme(legend.position = "top")
ggsave("Figures_Yellowhammer_revision/effects1.2.png", dpi=300, height = 12, width = 14, units = "cm")
# Onset of singing ----------------------------------------------------------------------------
# model selection
lmerTest::ranova(lmerTest::lmer(singing_sunrise ~ day*loc*(temp_sc+wind_sc+pressure_sc+cloudiness_sc)+(1|code)+(1|locality), data=df))
m1.3 <- lmer(singing_sunrise ~ day*loc*(temp_sc+wind_sc+pressure_sc+cloudiness_sc)+(1|code)+(1|locality), data=df)
m1.3 <- stepAIC(m1.3)
# model diagnostics and output
plot(m1.3)
qqmath(m1.3)
r.squaredGLMM(m1.3)
summary(m1.3) %>% coef %>% round(3) %>% write.table("coef1.3.csv", sep=";")
Anova(m1.3) %>% round(4) %>% write.table("anova1.3.csv", sep=";")
# effect plots
nd1.3 <- expand.grid(loc=c("AL", "HW"),
day=factor(c("Monday"), levels=c("Sunday", "Monday")),
pressure_sc=seq(min(df$pressure_sc), max(df$pressure_sc), l=100)) %>%
mutate(wind_sc = 0,
cloudiness_sc = 0)
bm1.3 <- bootMer(m1.3,
function(m){predict(m, newdata = nd1.3, re.form = NA)},
nsim = 500,
.progress = "txt")
nd1.3 <- nd1.3 %>%
mutate(
pressure = pressure_sc*sd(df$pressure) + mean(df$pressure),
y = bm1.3$t0,
lwr = apply(bm1.3$t, 2, quantile, 0.025),
upr = apply(bm1.3$t, 2, quantile, 0.975),
loc = factor(loc, levels = c("AL", "HW"), labels = c("Agricultural landscape", "Highway"))
)
ggplot(nd1.3, aes(x=pressure, y=y)) +
geom_line(aes(color=loc)) +
geom_ribbon(aes(ymin=lwr, ymax=upr, fill=loc), alpha=.3) +
scale_color_manual(values = c("chartreuse4", "coral4")) +
scale_fill_manual(values = c("chartreuse4", "coral4")) +
labs(y = "Onset of singing (mins rel. to sunrise)",
x = "Air pressure (hPa)",
color="", fill="") +
theme_bw() +
theme(legend.position = "top")
ggsave("Figures_Yellowhammer_revision/effects1.3.png", dpi=300, height = 12, width = 14, units = "cm")
nd1.3_S3 <- expand.grid(loc=factor(c("AL"), levels=c("AL", "HW")),
day=factor(c("Monday"), levels=c("Sunday", "Monday")),
wind_sc=seq(min(df$wind_sc), max(df$wind_sc), l=100)) %>%
mutate(pressure_sc = 0,
cloudiness_sc = 0)
bm1.3_S3 <- bootMer(m1.3,
function(m){predict(m, newdata = nd1.3_S3, re.form = NA)},
nsim = 500,
.progress = "txt")
nd1.3_S3 <- nd1.3_S3 %>%
mutate(
wind = wind_sc*sd(df$wind) + mean(df$wind),
y = bm1.3_S3$t0,
lwr = apply(bm1.3_S3$t, 2, quantile, 0.025),
upr = apply(bm1.3_S3$t, 2, quantile, 0.975),
loc = factor(loc, levels = c("AL", "HW"), labels = c("Agricultural landscape", "Highway"))
)
ggplot(nd1.3_S3, aes(x=wind, y=y)) +
geom_line() +
geom_ribbon(aes(ymin=lwr, ymax=upr), alpha=.3) +
labs(y = "Onset of singing (mins rel. to sunrise)",
x = "Wind_speed (m/s)",
color="", fill="") +
theme_bw() +
theme(legend.position = "top")
ggsave("Figures_Yellowhammer_revision/effects1.3_S3.png", dpi=300, height = 12, width = 14, units = "cm")
nd1.3_S4 <- expand.grid(loc=factor(c("AL"), levels=c("AL", "HW")),
day=factor(c("Monday"), levels=c("Sunday", "Monday")),
cloudiness_sc=seq(min(df$cloudiness_sc), max(df$cloudiness_sc), l=100)) %>%
mutate(pressure_sc = 0,
wind_sc = 0)
bm1.3_S4 <- bootMer(m1.3,
function(m){predict(m, newdata = nd1.3_S4, re.form = NA)},
nsim = 500,
.progress = "txt")
nd1.3_S4 <- nd1.3_S4 %>%
mutate(
cloudiness = cloudiness_sc*sd(df$cloudiness) + mean(df$cloudiness),
y = bm1.3_S4$t0,
lwr = apply(bm1.3_S4$t, 2, quantile, 0.025),
upr = apply(bm1.3_S4$t, 2, quantile, 0.975),
loc = factor(loc, levels = c("AL", "HW"), labels = c("Agricultural landscape", "Highway"))
)
ggplot(nd1.3_S4, aes(x=cloudiness, y=y)) +
geom_line() +
geom_ribbon(aes(ymin=lwr, ymax=upr), alpha=.3) +
labs(y = "Onset of singing (mins rel. to sunrise)",
x = "Cloudiness",
color="", fill="") +
theme_bw() +
theme(legend.position = "top")
ggsave("Figures_Yellowhammer_revision/effects1.3_S4.png", dpi=300, height = 12, width = 14, units = "cm")
save(m1.1, m1.2, m1.3, file = "models_m.1.x.RData")
# multicollinearity check
lmer(length_sum~day+dist_road_resc+temp_sc+wind_sc+humidity_sc+pressure_sc+cloudiness_sc+(1|code)+(1|locality),
data=df[df$loc=="AL",]) %>%
vif # humidity will be removed
lmer(length_sum~day+dist_road_resc+temp_sc+wind_sc+pressure_sc+cloudiness_sc+(1|code)+(1|locality),
data=df[df$loc=="AL",]) %>%
vif # fine
# model selection
lmerTest::ranova(lmerTest::lmer(length_sum~day*(dist_road_resc+temp_sc+wind_sc+pressure+cloudiness)+(1|code)+(1|locality),
data=df[df$loc=="AL",]))
library(tidyverse)
library(car)
library(lme4)
library(MuMIn)
library(lattice)
library(cowplot)
source("stepAIC.R")
df <- read.table("data_yellowhammer.csv", sep=";", header=T) %>%
group_by(week, loc) %>%
mutate(locality = as.factor(cur_group_id())) %>%
ungroup %>%
mutate(wind_sc = scale(wind),
temp_sc = scale(temp),
pressure_sc = scale(pressure),
cloudiness_sc = scale(cloudiness),
humidity_sc = scale(humidity))
# Song duration -------------------------------------------------------------------------------
# multicollinearity check
lmer(length_sum~day+dist_road_resc+temp_sc+wind_sc+humidity_sc+pressure_sc+cloudiness_sc+(1|code)+(1|locality),
data=df[df$loc=="AL",]) %>%
vif # humidity will be removed
lmer(length_sum~day+dist_road_resc+temp_sc+wind_sc+pressure_sc+cloudiness_sc+(1|code)+(1|locality),
data=df[df$loc=="AL",]) %>%
vif # fine
# model selection
lmerTest::ranova(lmerTest::lmer(length_sum~day*(dist_road_resc+temp_sc+wind_sc+pressure_sc+cloudiness_sc)+(1|code)+(1|locality),
data=df[df$loc=="AL",]))
m2.1 <- lmer(length_sum~day*(dist_road_resc+temp_sc+wind_sc+pressure_sc+cloudiness_sc)+(1|code),
data=df[df$loc=="AL",])
m2.1 <- stepAIC(m2.1)
# model diagnostics and output
plot(m2.1)
qqmath(m2.1)
r.squaredGLMM(m2.1)
summary(m2.1) %>% coef %>% round(3) %>% write.table("coef2.1.csv", sep=";")
Anova(m2.1) %>% round(4) %>% write.table("anova2.1.csv", sep=";")
# effect plots
nd2.1 <- data.frame(dist_road_resc = seq(min(df$dist_road_resc), max(df$dist_road_resc), l=100),
wind_sc = 0)
bm2.1 <- bootMer(m2.1, function(m){predict(m, newdata = nd2.1, re.form = NA)}, nsim = 500, .progress = "txt")
nd2.1 <- nd2.1 %>%
mutate(y = bm2.1$t0,
lwr = apply(bm2.1$t, 2, quantile, 0.025),
upr = apply(bm2.1$t, 2, quantile, 0.975),
dist_road = dist_road_resc*sd(df$distance_road) + mean(df$distance_road))
ggplot(nd2.1, aes(x=dist_road, y=y)) +
geom_line(color="chartreuse4") +
geom_ribbon(aes(ymin=lwr, ymax=upr), alpha=.3, fill="chartreuse4") +
labs(x="Distance to nearest road (m)", y="Song duration (s)") +
theme_bw()
ggsave("Figures_Yellowhammer_revision/effects2.1.png", dpi=300, height = 12, width = 14, units = "cm")
# Strophe length -----------------------------------------------------------------------------
# model selection
lmerTest::ranova(lmerTest::lmer(length_mean~day*(dist_road_resc+temp_sc+wind_sc+pressure_sc+cloudiness_sc)+(1|code)+(1|locality),
data=df[df$loc=="AL",]))
m2.2 <- lmer(length_mean~day*(dist_road_resc+temp_sc+wind_sc+pressure_sc+cloudiness_sc)+(1|code),
data=df[df$loc=="AL",])
m2.2 <- stepAIC(m2.2)
# model diagnostics and output
plot(m2.2)
qqmath(m2.2)
r.squaredGLMM(m2.2)
summary(m2.2) %>% coef %>% round(3) %>% write.table("coef2.2.csv", sep=";")
Anova(m2.2) %>% round(4) %>% write.table("anova2.2.csv", sep=";")
# Onset of singing ----------------------------------------------------------------------------
# model selection
lmerTest::ranova(lmerTest::lmer(singing_sunrise~day*(dist_road_resc+temp_sc+wind_sc+pressure_sc+cloudiness_sc)+(1|code)+(1|locality),
data=df[df$loc=="AL",]))
m2.3 <- lmer(singing_sunrise~day*(dist_road_resc+temp_sc+wind_sc+pressure_sc+cloudiness_sc)+(1|code)+(1|locality),
data=df[df$loc=="AL",])
m2.3 <- stepAIC(m2.3)
plot(m2.3)
qqmath(m2.3)
r.squaredGLMM(m2.3)
summary(m2.3) %>% coef %>% round(3) %>% write.table("coef2.3.csv", sep=";")
Anova(m2.3) %>% round(4) %>% write.table("anova2.3.csv", sep=";")
save(m2.1, m2.2, m2.3, m2.3, file = "models_m.2.x.RData")
m1.1 <- lmer(length_sum ~ day*loc*(temp_sc+wind_sc+pressure_sc+cloudiness_sc)+(1|code), data=df)
m1.1 <- stepAIC(m1.1)
# effect plots
nd1.1 <- data.frame(loc=c("AL", "HW"),
wind_sc = 0,
pressure_sc = 0,
cloudiness_sc = 0,
day = factor(c("Monday"), levels=c("Sunday","Monday")))
bm1.1 <- bootMer(m1.1,
function(m){predict(m, newdata = nd1.1, re.form = NA)},
nsim = 500,
.progress = "txt")
nd1.1 <- nd1.1 %>%
mutate(
y = bm1.1$t0,
lwr = apply(bm1.1$t, 2, quantile, 0.025),
upr = apply(bm1.1$t, 2, quantile, 0.975),
loc = factor(loc, levels = c("AL", "HW"), labels = c("Agricultural landscape", "Highway"))
)
(p1.1 <- ggplot(nd1.1, aes(x=loc, y=y)) +
geom_point() +
geom_errorbar(aes(ymin=lwr, ymax=upr), width=0.2) +
labs(x="", y="Song duration (s)") +
theme_bw() +
theme(legend.position = "top"))
ggsave("Figures_Yellowhammer_revision/effects1.1.png", dpi=300, height = 12, width = 14, units = "cm")
m1.2 <- lmer(length_mean ~ day*loc*(temp_sc+wind_sc+pressure_sc+cloudiness_sc)+(1|code), data=df)
m1.2 <- stepAIC(m1.2)
# effect plots
nd1.2 <- expand.grid(loc=c("AL", "HW"),
temp_sc=seq(min(df$temp_sc), max(df$temp_sc), l=100))
bm1.2 <- bootMer(m1.2,
function(m){predict(m, newdata = nd1.2, re.form = NA)},
nsim = 500,
.progress = "txt")
nd1.2 <- nd1.2 %>%
mutate(
temp = temp_sc*sd(df$temp) + mean(df$temp),
y = bm1.2$t0,
lwr = apply(bm1.2$t, 2, quantile, 0.025),
upr = apply(bm1.2$t, 2, quantile, 0.975),
loc = factor(loc, levels = c("AL", "HW"), labels = c("Agricultural landscape", "Highway"))
)
(p1.2 <- ggplot(nd1.2, aes(x=temp, y=y)) +
geom_line(aes(color=loc)) +
geom_ribbon(aes(ymin=lwr, ymax=upr, fill=loc), alpha=.3) +
scale_color_manual(values = c("chartreuse4", "coral4")) +
scale_fill_manual(values = c("chartreuse4", "coral4")) +
labs(x="Temperature (°C)", y="Strophe length (s)", color="", fill="") +
theme_bw() +
theme(legend.position = "top"))
ggsave("Figures_Yellowhammer_revision/effects1.2.png", dpi=300, height = 12, width = 14, units = "cm")
m1.3 <- lmer(singing_sunrise ~ day*loc*(temp_sc+wind_sc+pressure_sc+cloudiness_sc)+(1|code)+(1|locality), data=df)
m1.3 <- stepAIC(m1.3)
# effect plots
nd1.3 <- expand.grid(loc=c("AL", "HW"),
day=factor(c("Monday"), levels=c("Sunday", "Monday")),
pressure_sc=seq(min(df$pressure_sc), max(df$pressure_sc), l=100)) %>%
mutate(wind_sc = 0,
cloudiness_sc = 0)
bm1.3 <- bootMer(m1.3,
function(m){predict(m, newdata = nd1.3, re.form = NA)},
nsim = 500,
.progress = "txt")
nd1.3 <- nd1.3 %>%
mutate(
pressure = pressure_sc*sd(df$pressure) + mean(df$pressure),
y = bm1.3$t0,
lwr = apply(bm1.3$t, 2, quantile, 0.025),
upr = apply(bm1.3$t, 2, quantile, 0.975),
loc = factor(loc, levels = c("AL", "HW"), labels = c("Agricultural landscape", "Highway"))
)
(p1.3 <- ggplot(nd1.3, aes(x=pressure, y=y)) +
geom_line(aes(color=loc)) +
geom_ribbon(aes(ymin=lwr, ymax=upr, fill=loc), alpha=.3) +
scale_color_manual(values = c("chartreuse4", "coral4")) +
scale_fill_manual(values = c("chartreuse4", "coral4")) +
labs(y = "Onset of singing (mins rel. to sunrise)",
x = "Air pressure (hPa)",
color="", fill="") +
theme_bw() +
theme(legend.position = "top"))
ggsave("Figures_Yellowhammer_revision/effects1.3.png", dpi=300, height = 12, width = 14, units = "cm")
# All effect plots together -------------------------------------------
cowplot::plot_grid(p1.1,p1.2,p1.3,ncol=3)
ggsave("Figures_Yellowhammer_revision/effects1.x_all.png", width = 21, height = 12, units = "cm")
ggpubr::ggarrange(p1.1,p1.2,p1.3,ncol=3,common.legend = T)
ggsave("Figures_Yellowhammer_revision/effects1.x_all.png", width = 21, height = 12, units = "cm")
ggpubr::ggarrange(p1.1, ggpubr::ggarrange(p1.2,p1.3,ncol=3,common.legend = T))
ggpubr::ggarrange(p1.1,p1.2,p1.3,ncol=3,common.legend = T)
# All effect plots together -------------------------------------------
ggpubr::ggarrange(p1.1,p1.2,p1.3,ncol=2,common.legend = T)
ggsave("Figures_Yellowhammer_revision/effects1.x_all.png", width = 21, height = 12, units = "cm")
# All effect plots together -------------------------------------------
ggpubr::ggarrange(p1.1,p1.2,p1.3,ncol=2,nrow=2,common.legend = T)
ggsave("Figures_Yellowhammer_revision/effects1.x_all.png", width = 21, height = 12, units = "cm")
# All effect plots together -------------------------------------------
ggpubr::ggarrange(p1.1,p1.2,p1.3,ncol=2,nrow=2,common.legend = T) + theme(legend.position = "right")
ggsave("Figures_Yellowhammer_revision/effects1.x_all.png", width = 21, height = 12, units = "cm")
# All effect plots together -------------------------------------------
ggpubr::ggarrange(p1.1,p1.2+ theme(legend.position = "right"),p1.3+ theme(legend.position = "right"),ncol=2,nrow=2,common.legend = T)
# All effect plots together -------------------------------------------
ggpubr::ggarrange(p1.1,p1.2,p1.3,ncol=2,nrow=2,common.legend = T)
ggsave("Figures_Yellowhammer_revision/effects1.x_all.png", width = 21, height = 12, units = "cm")
# All effect plots together -------------------------------------------
ggpubr::ggarrange(p1.1,p1.2,p1.3,ncol=3,nrow=1,common.legend = T)
ggsave("Figures_Yellowhammer_revision/effects1.x_all.png", width = 21, height = 12, units = "cm")
ggsave("Figures_Yellowhammer_revision/effects1.x_all_version1.png", width = 21, height = 12, units = "cm")
ggpubr::ggarrange(p1.1,p1.2,p1.3,ncol=2,nrow=2,common.legend = T)
ggsave("Figures_Yellowhammer_revision/effects1.x_all_version2.png", width = 21, height = 12, units = "cm")
# multicollinearity check
lmer(length_sum ~ vehicle+RPDI2sc+temp_sc+wind_sc+humidity_sc+pressure_sc+cloudiness+(1|code)+(1|locality),
data=df[df$loc=="HW",]) %>%
vif # humidity will be removed
lmer(length_sum ~ vehicle+RPDI2sc+temp_sc+wind_sc+pressure_sc+cloudiness+(1|code)+(1|locality),
data=df[df$loc=="HW",]) %>%
vif # fine
# model selection
lmerTest::ranova(lmerTest::lmer(length_sum ~ vehicle+RPDI2sc+temp+wind+pressure+cloudiness+(1|code),
data=df[df$loc=="HW",]))
# model selection
lmerTest::ranova(lmerTest::lmer(length_sum ~ vehicle+RPDI2sc+temp+wind+pressure+cloudiness+(1|code)+(1|locality),
data=df[df$loc=="HW",]))
m3.1 <- lmer(length_sum ~ vehicle+RPDI2sc+temp+wind+pressure+cloudiness+(1|code),
data=df[df$loc=="HW",])
m3.1 <- stepAIC(m3.1)
# model diagnostics and output
plot(m3.1)
plot(m2.3)
qqmath(m2.3)
# model diagnostics and output
plot(m1.3)
# model diagnostics and output
plot(m3.1)
qqmath(m3.1)
r.squaredGLMM(m3.1)
Anova(m3.1) %>% round(4) %>% write.table("anova3.1.csv", sep=";")
Anova(m3.1)
summary(m3.1) %>% coef %>% round(3) %>% write.table("coef3.1.csv", sep=";")
# model selection
lmerTest::ranova(lmerTest::lmer(length_sum ~ vehicle+RPDI2sc+temp_sc+wind_sc+pressure_sc+cloudiness_sc+(1|code)+(1|locality),
data=df[df$loc=="HW",]))
df <- read.table("data_yellowhammer.csv", sep=";", header=T) %>%
group_by(week, loc) %>%
mutate(locality = as.factor(cur_group_id())) %>%
ungroup %>%
mutate(wind_sc = scale(wind),
temp_sc = scale(temp),
pressure_sc = scale(pressure),
cloudiness_sc = scale(cloudiness),
humidity_sc = scale(humidity),
vehicle_sc = scale(vehicle))
# multicollinearity check
lmer(length_sum ~ vehicle_sc+RPDI2sc+temp_sc+wind_sc+humidity_sc+pressure_sc+cloudiness+(1|code)+(1|locality),
data=df[df$loc=="HW",]) %>%
vif # humidity will be removed
lmer(length_sum ~ vehicle_sc+RPDI2sc+temp_sc+wind_sc+pressure_sc+cloudiness+(1|code)+(1|locality),
data=df[df$loc=="HW",]) %>%
vif # fine
# model selection
lmerTest::ranova(lmerTest::lmer(length_sum ~ vehicle_sc+RPDI2sc+temp_sc+wind_sc+pressure_sc+cloudiness_sc+(1|code)+(1|locality),
data=df[df$loc=="HW",]))
m3.1 <- lmer(length_sum ~ vehicle_sc+RPDI2sc+temp_sc+wind_sc+pressure_sc+cloudiness_sc+(1|code),
data=df[df$loc=="HW",])
m3.1 <- stepAIC(m3.1)
# model diagnostics and output
plot(m3.1)
r.squaredGLMM(m3.1)
Anova(m3.1) %>% round(4) %>% write.table("anova3.1.csv", sep=";")
Anova(m3.1)
summary(m3.1) %>% coef %>% round(3) %>% write.table("coef3.1.csv", sep=";")
# model selection
m3.2 <- lmer(length_mean ~ vehicle_sc+RPDI2sc+temp_sc+wind_sc+pressure_sc+cloudiness_sc+(1|code),
data=df[df$loc=="HW",])
# model selection
lmerTest::ranova(lmerTest::lmer(length_mean ~ vehicle_sc+RPDI2sc+temp_sc+wind_sc+pressure_sc+cloudiness_sc+(1|code)+(1|locality),
data=df[df$loc=="HW",]))
m3.2 <- lmer(length_mean ~ vehicle_sc+RPDI2sc+temp_sc+wind_sc+pressure_sc+cloudiness_sc+(1|code),
data=df[df$loc=="HW",])
m3.2 <- stepAIC(m3.2)
# model diagnostics and output
plot(m3.2)
qqmath(m3.2)
Anova(m3.2)
Anova(m3.2) %>% round(4) %>% write.table("anova3.2.csv", sep=";")
r.squaredGLMM(m3.2)
summary(m3.2) %>% coef %>% round(3) %>% write.table("coef3.2.csv", sep=";")
# model selection
lmerTest::ranova(lmerTest::lmer(syll_sum ~ vehicle_sc+RPDI2sc+temp_sc+wind_sc+pressure_sc+cloudiness_sc+(1|code)+(1|locality),
data=df[df$loc=="HW",]))
# model selection
lmerTest::ranova(lmerTest::lmer(singing_sunrise ~ vehicle_sc+RPDI2sc+temp_sc+wind_sc+pressure_sc+cloudiness_sc+(1|code)+(1|locality),
data=df[df$loc=="HW",]))
m3.4 <- lmer(singing_sunrise ~ vehicle_sc+RPDI2sc+temp_sc+wind_sc+pressure_sc+cloudiness_sc+(1|code),
data=df[df$loc=="HW",])
m3.4 <- stepAIC(m3.4)
# model diagnostics and output
plot(m3.4)
qqmath(m3.4)
r.squaredGLMM(m3.4)
# model selection
lmerTest::ranova(lmerTest::lmer(singing_sunrise ~ vehicle_sc+RPDI2sc+temp_sc+wind_sc+pressure_sc+cloudiness_sc+(1|code)+(1|locality),
data=df[df$loc=="HW",]))
m3.3 <- lmer(singing_sunrise ~ vehicle_sc+RPDI2sc+temp_sc+wind_sc+pressure_sc+cloudiness_sc+(1|code),
data=df[df$loc=="HW",])
m3.3 <- stepAIC(m3.3)
# model diagnostics and output
plot(m3.3)
qqmath(m3.3)
r.squaredGLMM(m3.3)
summary(m3.3) %>% coef %>% round(3) %>% write.table("coef3.3.csv", sep=";")
Anova(m3.3) %>% round(4) %>% write.table("anova3.3.csv", sep=";")
# Effect plots --------------------------------------------------------------------------------
nd3.1 <- data.frame(RPDI2sc = seq(min(df[df$loc=="HW",]$RPDI2sc), max(df[df$loc=="HW",]$RPDI2sc), l=100),
temp_sc=mean(df$temp),
wind_sc=mean(df$wind))
bm3.1 <- bootMer(m3.1, function(m){predict(m, newdata = nd3.1, re.form = NA)}, nsim = 500, .progress = "txt")
# Effect plots --------------------------------------------------------------------------------
nd3.1 <- data.frame(RPDI2sc = seq(min(df[df$loc=="HW",]$RPDI2sc), max(df[df$loc=="HW",]$RPDI2sc), l=100),
temp_sc=0,
wind_sc=0)
bm3.1 <- bootMer(m3.1, function(m){predict(m, newdata = nd3.1, re.form = NA)}, nsim = 500, .progress = "txt")
nd3.1 <- nd3.1 %>%
mutate(y = bm3.1$t0,
lwr = apply(bm3.1$t, 2, quantile, 0.025),
upr = apply(bm3.1$t, 2, quantile, 0.975))
nd3.2 <- data.frame(vehicle_sc = seq(min(df[df$loc=="HW",]$vehicle_sc), max(df[df$loc=="HW",]$vehicle_sc), l=100),
temp_sc=0,
wind_sc=0,
pressure_sc=0,
cloudiness_sc=0)
bm3.2 <- bootMer(m3.2, function(m){predict(m, newdata = nd3.2, re.form = NA)}, nsim = 500, .progress = "txt")
nd3.2 <- nd3.2 %>%
mutate(vehicle = vehicle_sc*sd(df$vehicle) + mean(df$vehicle),
y = bm3.2$t0,
lwr = apply(bm3.2$t, 2, quantile, 0.025),
upr = apply(bm3.2$t, 2, quantile, 0.975))
nd3.3 <- data.frame(vehicle_sc = seq(min(df[df$loc=="HW",]$vehicle_sc), max(df[df$loc=="HW",]$vehicle_sc), l=100),
pressure_sc=0,
wind_sc=0,
cloudiness_sc=0)
bm3.3 <- bootMer(m3.3, function(m){predict(m, newdata = nd3.3, re.form = NA)}, nsim = 500, .progress = "txt")
nd3.3 <- nd3.3 %>%
mutate(vehicle = vehicle_sc*sd(df$vehicle) + mean(df$vehicle),
y = bm3.3$t0,
lwr = apply(bm3.3$t, 2, quantile, 0.025),
upr = apply(bm3.3$t, 2, quantile, 0.975))
plot_grid(ggplot(nd3.1, aes(x=RPDI2sc*sd(df[df$loc=="HW",]$RPDI2)+mean(df[df$loc=="HW",]$RPDI2), y=y)) +
geom_line(color="coral4") +
geom_ribbon(aes(ymin=lwr, ymax=upr), alpha=.3, fill="coral4") +
labs(x="Long-term traffic intensity (cars/day)", y="Song duration (s)") +
theme_bw(),
ggplot(nd3.2, aes(x=vehicle, y=y)) +
geom_line(color="coral4") +
geom_ribbon(aes(ymin=lwr, ymax=upr), alpha=.3, fill="coral4") +
labs(x="Instant traffic intensity (cars/hour)", y="Strophe length (s)") +
theme_bw(),
ggplot(nd3.3, aes(x=vehicle, y=y)) +
geom_line(color="coral4") +
geom_ribbon(aes(ymin=lwr, ymax=upr), alpha=.3, fill="coral4") +
labs(x="Instant traffic intensity (cars/hour)", y="Onset of singing (mins rel. to sunrise)") +
theme_bw(),
ncol = 2)
plot_grid(ggplot(nd3.1, aes(x=RPDI2sc*sd(df[df$loc=="HW",]$RPDI2)+mean(df[df$loc=="HW",]$RPDI2), y=y)) +
geom_line(color="coral4") +
geom_ribbon(aes(ymin=lwr, ymax=upr), alpha=.3, fill="coral4") +
labs(x="Long-term traffic intensity (cars/day)", y="Song duration (s)") +
theme_bw(),
ggplot(nd3.2, aes(x=vehicle, y=y)) +
geom_line(color="coral4") +
geom_ribbon(aes(ymin=lwr, ymax=upr), alpha=.3, fill="coral4") +
labs(x="Instant traffic intensity (cars/hour)", y="Strophe length (s)") +
theme_bw(),
ggplot(nd3.3, aes(x=vehicle, y=y)) +
geom_line(color="coral4") +
geom_ribbon(aes(ymin=lwr, ymax=upr), alpha=.3, fill="coral4") +
labs(x="Instant traffic intensity (cars/hour)", y="Onset of singing (mins rel. to sunrise)") +
theme_bw(),
ncol = 3)
ggpubr::ggarrange(p1.1,p1.2,p1.3,ncol=2,nrow=2,common.legend = T)
ggsave("Figures_Yellowhammer_revision/effects1.x_all_version2.png", width = 21, height = 16, units = "cm")
?plot_grid
plot_grid(ggplot(nd3.1, aes(x=RPDI2sc*sd(df[df$loc=="HW",]$RPDI2)+mean(df[df$loc=="HW",]$RPDI2), y=y)) +
geom_line(color="coral4") +
geom_ribbon(aes(ymin=lwr, ymax=upr), alpha=.3, fill="coral4") +
labs(x="Long-term traffic intensity (cars/day)", y="Song duration (s)") +
theme_bw(),
ggplot(nd3.2, aes(x=vehicle, y=y)) +
geom_line(color="coral4") +
geom_ribbon(aes(ymin=lwr, ymax=upr), alpha=.3, fill="coral4") +
labs(x="Instant traffic intensity (cars/hour)", y="Strophe length (s)") +
theme_bw(),
ggplot(nd3.3, aes(x=vehicle, y=y)) +
geom_line(color="coral4") +
geom_ribbon(aes(ymin=lwr, ymax=upr), alpha=.3, fill="coral4") +
labs(x="Instant traffic intensity (cars/hour)", y="Onset of singing (mins rel. to sunrise)") +
theme_bw(),
ncol = 3)
ggsave("Figures_Yellowhammer_revision/effects_m3.x_version1.png", dpi=300, height = 12, width = 21, units = "cm")
ggsave("Figures_Yellowhammer_revision/effects_m3.x_version1.png", dpi=300, height = 10, width = 21, units = "cm")
ggsave("Figures_Yellowhammer_revision/effects_m3.x_version1.png", dpi=300, height = 12, width = 21, units = "cm")
ggsave("Figures_Yellowhammer_revision/effects_m3.x_version1.png", dpi=300, height = 16, width = 21, units = "cm")
ggsave("Figures_Yellowhammer_revision/effects_m3.x_version1.png", dpi=300, height = 12, width = 24, units = "cm")
plot_grid(ggplot(nd3.1, aes(x=RPDI2sc*sd(df[df$loc=="HW",]$RPDI2)+mean(df[df$loc=="HW",]$RPDI2), y=y)) +
geom_line(color="coral4") +
geom_ribbon(aes(ymin=lwr, ymax=upr), alpha=.3, fill="coral4") +
labs(x="Long-term traffic intensity (cars/day)", y="Song duration (s)") +
theme_bw(),
ggplot(nd3.2, aes(x=vehicle, y=y)) +
geom_line(color="coral4") +
geom_ribbon(aes(ymin=lwr, ymax=upr), alpha=.3, fill="coral4") +
labs(x="Instant traffic intensity (cars/hour)", y="Strophe length (s)") +
theme_bw(),
ggplot(nd3.3, aes(x=vehicle, y=y)) +
geom_line(color="coral4") +
geom_ribbon(aes(ymin=lwr, ymax=upr), alpha=.3, fill="coral4") +
labs(x="Instant traffic intensity (cars/hour)", y="Onset of singing (mins rel. to sunrise)") +
theme_bw(),
ncol = 2)
ggsave("Figures_Yellowhammer_revision/effects_m3.x_version2.png", dpi=300, height = 16, width = 21, units = "cm")
save(m3.1, m3.2, m3.3, file = "models_m.3.x.RData")
